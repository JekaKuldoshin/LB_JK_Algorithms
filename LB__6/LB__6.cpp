//1. Написати алгоритми основних операцій(додавання, пошук і видалення) в
//Псевдокод для прямої адресації, хеш - таблиці і відкритої адресації.

//2. Реалізувати основні операції.

//3. Провести аналіз цих алгоритмів і зробити висновок по їх застосовності.

//Завдання

//1. Нехай розмір хеш - таблиці дорівнює m = 20, а хеш - функція має вигляд :
//h(k) = [m(kA mod 1)], где А = (5 - l) / 2.
//	В які позиції потраплять ключі(див.таблицю, стовпець 3) ?

//	2. Як буде виглядати хеш - таблиця з ланцюжками після того, як в неї
//	послідовно помістили елементи з ключами(див.таблицю, стовпець 2) (в
//  зазначеному порядку) ? Число позицій в таблиці дорівнює 9, хеш - функція має вигляд
//	h(k) = k mod 9.

//	3. Виконайте додавання ключів(в зазначеному порядку, див.таблицю
//		стовпець 2) в хеш - таблицю з відкритою адресацією розміру m = 11. Для обчислення
//	послідовності проб використовується лінійний метод з h'(k) = k mod m. Виконайте те 
//	ж завдання, якщо використовується квадратичний метод з тієї ж h', c1 = 1, c2 = 3, а 
//	також для подвійного хешування з h1 = h' и h2(k) = 1 + (k mod (m - 1)) .

//	Використовувати готові реалізації структур даних(наприклад, STL)
//	заборонено, але можна використати реалізацію рядків(наприклад, std::string у C++).
